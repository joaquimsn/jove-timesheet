package br.com.jovetecnologia.infrastructure.dao;

import java.io.Serializable;
import java.util.List;

import org.hibernate.Session;
import org.hibernate.Transaction;

import br.com.jovetecnologia.infrastructure.connection.ConexaoHibernate;

public class DAO<T> implements Serializable {

	private static final long serialVersionUID = 2887068895559328314L;

	private Session session;
	private Class<T> classse;

	public DAO(Class<T> classe) {
		this.classse = classe;
	}

	public void cadastar(T objeto) {
		session = ConexaoHibernate.getSessionFactory().openSession();
		Transaction transaction = session.beginTransaction();

		try {
			session.save(objeto);
			transaction.commit();
		} catch (Exception e) {
			transaction.rollback();
			e.printStackTrace();
		} finally {
			ConexaoHibernate.fecharConexao(session);
		}
	}

	public void alterar(T objeto) {
		session = ConexaoHibernate.getSessionFactory().openSession();
		Transaction transaction = session.beginTransaction();

		try {
			session.update(objeto);
			transaction.commit();
		} catch (Exception e) {
			transaction.rollback();
			e.printStackTrace();
		} finally {
			ConexaoHibernate.fecharConexao(session);
		}
	}

	public void deletar(T objeto) {
		session = ConexaoHibernate.getSessionFactory().openSession();
		Transaction transaction = session.beginTransaction();

		try {
			session.delete(objeto);
			transaction.commit();
		} catch (Exception e) {
			transaction.rollback();
			e.printStackTrace();
		} finally {
			ConexaoHibernate.fecharConexao(session);
		}
	}
	
	@SuppressWarnings("rawtypes")
	public List listarTodos() {
		return session.createCriteria(classse).list();
	}

}
